(function() {
    'use strict';
    var network = new Lampa.Reguest();

    function testAllowedDomains() {
        console.log('Testing allowed domains in Lampa...');
        
        var testUrls = [
            // –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –¥–æ–º–µ–Ω—ã Lampa
            Lampa.Utils.protocol() + 'tmdb.'+ Lampa.Manifest.cub_domain +'/3/movie/550?api_key=4ef0d7355d9ffb5151e987764708ce96',
            'https://api.alloha.tv/?token=04941a9a3ca3ac16e2b4327347bbc1&name=test',
            'https://lampa.app/',
            'https://cub.red/',
            
            // –°—Ç–æ—Ä–æ–Ω–Ω–∏–µ –¥–æ–º–µ–Ω—ã (—Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã)
            'https://www.google.com',
            'https://ru.kinorium.com',
            'https://api.codetabs.com/v1/proxy?quest=https://ru.kinorium.com',
        ];
        
        function testNextUrl(index) {
            if (index >= testUrls.length) return;
            
            var url = testUrls[index];
            console.log('Testing URL:', url);
            
            network.silent(url, function(data) {
                console.log('‚úì ALLOWED:', url);
                Lampa.Noty.show('–†–∞–∑—Ä–µ—à–µ–Ω–æ: ' + new URL(url).hostname);
                testNextUrl(index + 1);
            }, function(error) {
                console.log('‚úó BLOCKED:', url, error);
                Lampa.Noty.show('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: ' + new URL(url).hostname);
                testNextUrl(index + 1);
            });
        }
        
        testNextUrl(0);
    }

    function testKinoriumWorkaround() {
        console.log('Testing Kinorium workarounds...');
        
        // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –æ–±—Ö–æ–¥–Ω—ã–µ –ø—É—Ç–∏
        var workarounds = [
            // –ß–µ—Ä–µ–∑ Alloha API –¥–ª—è –ø–æ–∏—Å–∫–∞ (–µ—Å–ª–∏ –∑–Ω–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∏–ª—å–º–æ–≤)
            'https://api.alloha.tv/?token=04941a9a3ca3ac16e2b4327347bbc1&name=–º–∞—Ç—Ä–∏—Ü–∞',
            
            // –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—É–± –¥–æ–º–µ–Ω –∫–∞–∫ –ø—Ä–æ–∫—Å–∏
            Lampa.Utils.protocol() + 'tmdb.'+ Lampa.Manifest.cub_domain +'/3/search/movie?query=–º–∞—Ç—Ä–∏—Ü–∞&api_key=4ef0d7355d9ffb5151e987764708ce96',
            
            // –ü—Ä–æ–±—É–µ–º –¥—Ä—É–≥–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ API
            'https://api.kinopoisk.dev/v1.3/movie?page=1&limit=10&selectFields=name&token=XXX'
        ];
        
        workarounds.forEach((url, index) => {
            network.silent(url, function(data) {
                console.log('Workaround SUCCESS:', index, url, data);
                Lampa.Noty.show('–û–±—Ö–æ–¥–Ω–æ–π –ø—É—Ç—å ' + index + ' —Ä–∞–±–æ—Ç–∞–µ—Ç!');
            }, function(error) {
                console.log('Workaround FAILED:', index, url, error);
            });
        });
    }

    function startPlugin() {
        if(!window.lampa_settings.kinorium_debug) {
            Lampa.SettingsApi.addComponent({
                component: 'kinorium_debug',
                icon: 'üîß',
                name: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ö–∏–Ω–æ—Ä–∏—É–º–∞'
            });
        }

        Lampa.SettingsApi.addParam({
            component: 'kinorium_debug',
            param: {
                type: 'title'
            },
            field: {
                name: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è',
            }
        });

        Lampa.SettingsApi.addParam({
            component: 'kinorium_debug',
            param: {
                type: 'button',
                name: 'test_domains'
            },
            field: {
                name: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –¥–æ–º–µ–Ω—ã',
                description: '–ö–∞–∫–∏–µ –¥–æ–º–µ–Ω—ã —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –≤ Lampa'
            },
            onChange: () => {
                testAllowedDomains();
            }
        });

        Lampa.SettingsApi.addParam({
            component: 'kinorium_debug',
            param: {
                type: 'button',
                name: 'test_workarounds'
            },
            field: {
                name: '–¢–µ—Å—Ç –æ–±—Ö–æ–¥–Ω—ã—Ö –ø—É—Ç–µ–π',
                description: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã'
            },
            onChange: () => {
                testKinoriumWorkaround();
            }
        });

        Lampa.SettingsApi.addParam({
            component: 'kinorium_debug',
            param: {
                type: 'title'
            },
            field: {
                name: '–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã',
            }
        });

        Lampa.SettingsApi.addParam({
            component: 'kinorium_debug',
            param: {
                type: 'button',
                name: 'show_solution'
            },
            field: {
                name: '–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ',
                description: '–ö–∞–∫ –æ–±–æ–π—Ç–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è Lampa'
            },
            onChange: () => {
                Lampa.Noty.show('–ò—Å–ø–æ–ª—å–∑—É–µ–º Google Apps Script –∫–∞–∫ –ø—Ä–æ–∫—Å–∏ (–∫–∞–∫ –≤ –ø–ª–∞–≥–∏–Ω–µ –ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞)');
            }
        });
    }

    if(!window.kinorium_debug_ready) {
        window.kinorium_debug_ready = true;
        startPlugin();
    }
})();